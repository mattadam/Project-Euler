# Problem 2

# Each new term in the Fibonacci sequence is generated by adding
# the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.
require "test/unit"

class TC_MyTest < Test::Unit::TestCase
  def test_fibonacci
    assert(fibonacci_sequence(90) == 4613732, 'Calculated value is incorrect')
  end
end

class Array
	def sum_evens
		select{ |a| a % 2 == 0 }.reduce(:+)
	end
end

def fibonacci_sequence(n)
	sequence = []

	(0..n).inject([0,1]) do |a,b| 
		sum_last_two = a.last(2).reduce(:+)
		break if sum_last_two >= 4000000  

		sequence << sum_last_two
	end
	
	p "Sum of even-valued terms of fibonacci sequence up to #{n} is: #{sequence.uniq.sum_evens}"

	sequence.uniq.sum_evens
end